# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        dummy = ListNode(0)
        cur = dummy
        carry = 0
        while l1 and l2:
            SUM = l1.val + l2.val + carry
            if SUM >= 10:
                SUM = SUM % 10
                carry = 1
            else:
                carry = 0
            temp = ListNode(SUM)
            cur.next = temp
            cur = cur.next
            l1 = l1.next
            l2 = l2.next
        
        if l1:
            while l1:
                SUM = l1.val + carry
                if SUM >= 10:
                    SUM = SUM % 10
                    carry = 1
                else:
                    carry = 0
                temp = ListNode(SUM)
                cur.next = temp
                cur = cur.next
                l1 = l1.next
                
        elif l2:
            while l2:
                SUM = l2.val + carry
                if SUM >= 10:
                    SUM = SUM % 10
                    carry = 1
                else:
                    carry = 0
                temp = ListNode(SUM)
                cur.next = temp
                cur = cur.next
                l2 = l2.next
        
        if carry != 0:
            temp = ListNode(carry)
            cur.next = temp
        return dummy.next
        
        
